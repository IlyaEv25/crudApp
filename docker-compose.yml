version: "3.9"
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: crud-zookeeper
    ports:
      - 2181:2181
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: crud-kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: crud-kafdrop
    restart: "no"
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: -Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify
    depends_on:
      - kafka
  database:
    image: postgres:10.4-alpine
    container_name: crud-database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 8000:5432
  pgAdmin:
    image: dpage/pgadmin4
    container_name: crud-admin
    environment:
      PGADMIN_DEFAULT_EMAIL: something@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Blabla
    ports:
      - 8085:80
  gateway:
    build: ./services/gateway
    container_name: crud-gateway
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
    depends_on:
      - user_service
      - record_service
      - zookeeper
      - kafka
      - database
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
  record_service:
    build: ./services/record_service
    container_name: crud-record-service
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  user_service:
    build: ./services/user_service
    container_name: crud-user-service
    command: sh -c "dockerize -wait tcp://zookeeper:2181 -wait tcp://kafka:9092 -wait tcp://database:5432 npm start"
    depends_on:
      - zookeeper
      - kafka
      - database
    environment:

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

